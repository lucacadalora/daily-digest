Key Areas to Review and Fix:
MetaTags Component (Meta Tags Generation)

The MetaTags component and the updateMetaTags helper in your React code look well-structured, but there are a few things to check:

Ensure the cacheBuster parameter is correctly passed and being used for image URLs to avoid caching issues. It looks like you've implemented this well with the ?v=20250302 versioning in the image URL.
Suggestion:

Ensure that metadata.image (like "https://lucaxyzz-digest.replit.app/latest/china-steel-true.png") is fully accessible and not blocked by any server settings (like CORS or access restrictions).
Twitter Card Meta Tags:

You have included the necessary Twitter Card meta tags like twitter:title, twitter:description, and twitter:image. This is critical and should work if Twitter correctly fetches the metadata.

Suggestions:

Try removing the twitter:domain tag temporarily. Sometimes this causes issues with preview rendering.
Double-check if Twitter is reading the correct image URL by testing it through the Twitter Card Validator and confirming that the correct image (with versioning) is being fetched.
Cache Headers and Crawler Detection:

In your server-side crawler-detection.ts file, you are correctly setting no-cache headers for social media crawlers. However, this could lead to issues if the cache headers are not set correctly when fetching the page with the Twitter card metadata.

Suggestions:

Make sure that the Cache-Control headers are properly set to avoid caching the metadata and that the headers are applied to the response for Twitter’s bot (Twitterbot).
Add cross-origin headers (Access-Control-Allow-Origin) to allow Twitter's bot to access the resources. This seems to be done well in the routes handling Twitter/X requests.
Route Handling and Redirects:

You are serving the Twitter Card through a separate route /t-steel and directly serving an HTML file for minimal Twitter Card content. While this is a good practice for optimization, ensure that:

The redirect from /latest/china-steel-reform is correctly reaching the Twitter card page (/t-steel). You can check if the redirect works by visiting the /t-steel URL directly in your browser.
Suggestions:

Use console.log to verify that the request is correctly being detected by your middleware and redirected to the /t-steel route.
If there's any dynamic content (like image URL or meta tags) that depends on the request, ensure the data is correctly passed to the rendered HTML page at /t-steel.
Direct Twitter Card HTML (t-steel.html):

The file public/twitter-card/steel.html seems to contain all the correct meta tags, but ensure the image URL is correct and publicly accessible.

Suggestions:

Double-check the image URL used in the twitter:image and og:image tags to ensure it's publicly accessible and meets Twitter's image size requirements (minimum 600x314px, recommended 1200x630px).
Test whether Twitter's crawler can properly fetch and display the image by checking it with the Twitter Card Validator.
Social Media Cache Issues:

Twitter sometimes caches the metadata too aggressively, which might be the reason why the image preview shows when you paste the link, but disappears when posted.

Suggestions:

Try forcing a refresh by adding a versioning parameter to the image URL in the twitter:image and og:image meta tags, like ?v=6.
Repost the link after a few minutes to allow Twitter to re-fetch the metadata.
Next Steps:
Test with Twitter Card Validator:

Paste the link into the Twitter Card Validator to see how Twitter is fetching the metadata. If the image is missing or incorrect, there might be an issue with the image URL or how Twitter reads the meta tags.
Ensure Image Accessibility:

Verify that the image URL (https://lucaxyzz-digest.replit.app/latest/china-steel-true.png?v=20250302) is publicly accessible by testing it in incognito mode. If it's blocked or restricted, Twitter won't be able to fetch it.
Check Cache and CORS Headers:

Ensure that the Cache-Control headers are correctly set to prevent caching and that cross-origin headers (Access-Control-Allow-Origin) are set to allow Twitter's bot to fetch resources.
Ensure Proper Redirects:

Test the redirect mechanism to ensure Twitter’s bot correctly receives the page with the Twitter card content.